name: tests

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:

    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: run lint
      run: make lint

    - name: Verify diff
      run: make verify.diff

  verify:
    runs-on: ubuntu-latest
    steps:

    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 0

    - name: Verify operator-sdk bundle consistency
      run: make verify.bundle

    - name: Verify manifests consistency
      run: make verify.manifests

    - name: Verify generators consistency
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 3
        max_attempts: 3
        command: make verify.generators

  unit-tests:
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: run unit tests
      run: make test.unit
      env:
        GOTESTSUM_JUNITFILE: "unit-tests.xml"

    - name: collect test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage.unit.out

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: tests-report
        path: unit-tests.xml

  conformance-tests:
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: run conformance tests
      run: make test.conformance
      env:
        GOTESTSUM_JUNITFILE: "conformance-tests.xml"

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: tests-report
        path: conformance-tests.xml

  integration-tests:
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: run integration tests
      run: make test.integration
      env:
        KONG_CONTROLLER_OUT: stdout
        GOTESTSUM_JUNITFILE: "integration-tests.xml"

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: diagnostics-integration
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: coverage.integration.out

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: tests-report
        path: integration-tests.xml

  e2e-tests:
    runs-on: ubuntu-latest
    steps:

    - name: setup golang
      uses: actions/setup-go@v3
      with:
        go-version: '^1.19'

    - name: cache go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-build-codegen-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-codegen-

    - name: checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    
    - name: build docker image
      env:
        IMG: gateway-operator
        TAG: e2e-${{ github.sha }}
      run: make docker.build
    
    - name: run e2e tests
      run: make test.e2e
      env:
        KONG_TEST_GATEWAY_OPERATOR_IMAGE_LOAD: gateway-operator:e2e-${{ github.sha }}
        GOTESTSUM_JUNITFILE: "e2e-tests.xml"

    - name: upload diagnostics
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: diagnostics-e2e
        path: /tmp/ktf-diag*
        if-no-files-found: ignore

    - name: collect test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: tests-report
        path: e2e-tests.xml

  buildpulse-report:
    environment: "Configure ci"
    needs:
      - unit-tests
      - integration-tests
      - conformance-tests
      - e2e-tests
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:

      - name: checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: download tests report
        id: download-coverage
        uses: actions/download-artifact@v3
        with:
          name: tests-report
          path: report

      - name: Upload test results to BuildPulse for flaky test detection
        if: ${{ !cancelled() }}
        uses: Workshop64/buildpulse-action@43cb4e7429b9a6d8f882d188062573b7c937de14
        with:
          account: 962416
          repository: 477814940
          path: report/*.xml
          key: ${{ secrets.BUILDPULSE_ACCESS_KEY_ID }}
          secret: ${{ secrets.BUILDPULSE_SECRET_ACCESS_KEY }}
